events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream app-service {
        server app-service:8000;
    }
    
    upstream auth-service {
        server auth-service:3000;
    }

    # HTTP server - handles Let's Encrypt challenges and redirects to HTTPS
    server {
        listen 80;
        server_name idlelgr.duckdns.org;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name idlelgr.duckdns.org;
        
        ssl_certificate /etc/letsencrypt/live/idlelgr.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/idlelgr.duckdns.org/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        # Assets from app-service
        location /assets/ {
            proxy_pass http://app-service/assets/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Protected endpoint - needs cookies passed through
        location /protected {
            proxy_pass http://app-service/protected;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass_header Set-Cookie;
            proxy_pass_header Cookie;
        }

        # Auth service routes
        location ~ ^/(login|logout|signup)$ {
            proxy_pass http://auth-service$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass_header Set-Cookie;
            proxy_pass_header Cookie;
        }

        location /auth/ {
            proxy_pass http://auth-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass_header Set-Cookie;
            proxy_pass_header Cookie;
        }

        location /app/ {
            proxy_pass http://app-service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass_header Set-Cookie;
            proxy_pass_header Cookie;
        }

        location /verify-2fa {
        proxy_pass http://auth-service/verify-2fa;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass_header Set-Cookie;
        proxy_pass_header Cookie;
        }

        location / {
            return 301 /app/;
        }
    }
}