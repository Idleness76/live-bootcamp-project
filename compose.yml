services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt  # SSL certificates from certbot
      - ./certbot/www:/var/www/certbot   # Let's Encrypt challenge files
    depends_on:
      - app-service
      - auth-service
    restart: "always"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: "always"

  app-service:
    build:
      context: .
      dockerfile: app-service/Dockerfile
    image: idleness76/app-service
    restart: "always"
    environment:
      AUTH_SERVICE_IP: ${AUTH_SERVICE_IP}
      AUTH_SERVICE_HOST_NAME: auth-service
    depends_on:
      auth-service:
        condition: service_started
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    image: idleness76/auth-service
    restart: "always"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@db:5432"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
  
  db:
    image: postgres:alpine
    restart: "always"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
  
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

volumes:
  db:
    driver: local